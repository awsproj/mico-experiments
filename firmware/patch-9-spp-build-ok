commit 4b4bf7a596140826a369e554624aa5d109127602
Date:   Mon Apr 13 14:34:38 2020 -0700

    temp change 9 code adjusted to build spp ok

diff --git a/wifi/station/MICOAppDefine.h b/wifi/station/MICOAppDefine.h
new file mode 100644
index 0000000..af4c80a
--- /dev/null
+++ b/wifi/station/MICOAppDefine.h
@@ -0,0 +1,2 @@
+
+#include "user_cli.h"
diff --git a/wifi/station/station.mk b/wifi/station/station.mk
index d92f6d6..38df1d3 100644
--- a/wifi/station/station.mk
+++ b/wifi/station/station.mk
@@ -26,9 +26,20 @@ NAME := App_wifi_station
 
 $(NAME)_SOURCES := wifi_station_core_api.c
 #$(NAME)_SOURCES := wifi_station_system_api.c
-				      
-$(NAME)_SOURCES += tcp_client.c
+
 $(NAME)_SOURCES += wifi_scan.c
 
+
+TEST1_TCP_CLIENT := no # yes or no
+
+ifeq ($(TEST1_TCP_CLIENT),yes)
+ $(NAME)_CFLAGS += -DTEST_TCP_CLIENT=1
+ $(NAME)_SOURCES += tcp_client.c
+else
+ $(NAME)_CFLAGS += -DTEST_TCP_CLIENT=2
+ $(NAME)_SOURCES += RemoteTcpClient.c SppProtocol.c UartRecv.c
+endif
+
+
 wifi_station_core_api.c: user_cli.c
 
diff --git a/wifi/station/user_cli.c b/wifi/station/user_cli.c
index bc96a9c..a91c2fd 100644
--- a/wifi/station/user_cli.c
+++ b/wifi/station/user_cli.c
@@ -2,7 +2,11 @@
  * user-cli.c
  */
 
+#if defined(TEST_TCP_CLIENT) && (TEST_TCP_CLIENT == 1)
 extern int tcp_client_test_enabled;
+#else
+static int tcp_client_test_enabled = 0;
+#endif
 
 static void user_debug_Command(char *pcWriteBuffer, int xWriteBufferLen, 
                                 int argc, char **argv)
diff --git a/wifi/station/user_cli.h b/wifi/station/user_cli.h
index c2a9554..d00cc49 100644
--- a/wifi/station/user_cli.h
+++ b/wifi/station/user_cli.h
@@ -18,6 +18,21 @@ extern "C" {
 #define MAX_QUEUE_NUM                       6  // 1 remote client, 5 local server
 #define MAX_QUEUE_LENGTH                    8  // each queue max 8 msg
 
+#define UART_RECV_TIMEOUT                   500
+#define UART_ONE_PACKAGE_LENGTH             1024
+#define wlanBufferLen                       1024
+#define UART_BUFFER_LENGTH                  2048
+
+/* Define thread stack size */
+#define STACK_SIZE_UART_RECV_THREAD           0x2A0
+#define STACK_SIZE_REMOTE_TCP_CLIENT_THREAD   0x500
+
+typedef struct _socket_msg {
+  int ref;
+  int len;
+  uint8_t data[1];
+} socket_msg_t;
+
 /*Application's configuration stores in flash*/
 typedef struct
 {
diff --git a/wifi/station/wifi_station_core_api.c b/wifi/station/wifi_station_core_api.c
index 4f71979..a557e79 100644
--- a/wifi/station/wifi_station_core_api.c
+++ b/wifi/station/wifi_station_core_api.c
@@ -35,6 +35,14 @@
 
 #define wifi_station_log(M, ...) custom_log("WIFI-station-core", M, ##__VA_ARGS__)
 
+#if defined(TEST_TCP_CLIENT) && (TEST_TCP_CLIENT == 2)
+volatile ring_buffer_t rx_buffer;
+volatile uint8_t rx_data[UART_BUFFER_LENGTH];
+
+extern void uartRecv_thread( uint32_t inContext );
+extern void remoteTcpClient_thread( uint32_t inContext );
+#endif
+
 static void micoNotify_ConnectFailedHandler(OSStatus err, void* inContext)
 {
   wifi_station_log("join Wlan failed Err: %d", err);
@@ -148,10 +156,48 @@ int application_start( void )
   micoWlanStartAdv(&wNetConfigAdv);
   wifi_station_log("connecting to %s... started.", wNetConfigAdv.ap_info.ssid);
 
+  #if defined(TEST_TCP_CLIENT) && (TEST_TCP_CLIENT == 1)
   /* tcp client */
   extern int tcp_client_application_start( void );
   err = tcp_client_application_start();
   require_noerr( err, exit );
+  #elif defined(TEST_TCP_CLIENT) && (TEST_TCP_CLIENT == 2)
+  {
+    mico_uart_config_t uart_config;
+
+    /* Protocol initialize */
+    sppProtocolInit( app_context );
+
+    /*UART receive thread*/
+    uart_config.baud_rate = app_context->appConfig->USART_BaudRate;
+    uart_config.data_width = DATA_WIDTH_8BIT;
+    uart_config.parity = NO_PARITY;
+    uart_config.stop_bits = STOP_BITS_1;
+    uart_config.flow_control = FLOW_CONTROL_DISABLED;
+    if ( mico_context->micoSystemConfig.mcuPowerSaveEnable == true )
+        uart_config.flags = UART_WAKEUP_ENABLE;
+    else
+        uart_config.flags = UART_WAKEUP_DISABLE;
+
+    ring_buffer_init( (ring_buffer_t *) &rx_buffer, (uint8_t *) rx_data, UART_BUFFER_LENGTH );
+    MicoUartInitialize( UART_FOR_APP, &uart_config, (ring_buffer_t *) &rx_buffer );
+    err = mico_rtos_create_thread( NULL, MICO_APPLICATION_PRIORITY, "UART Recv", uartRecv_thread,
+                                   STACK_SIZE_UART_RECV_THREAD, (mico_thread_arg_t)app_context );
+    require_noerr_action( err, exit, 
+            wifi_station_log("ERROR: Unable to start the uart recv thread.") );
+
+    /* Remote TCP client thread */
+    if ( app_context->appConfig->remoteServerEnable == true )
+    {
+        err = mico_rtos_create_thread( NULL, MICO_APPLICATION_PRIORITY, 
+                                       "Remote Client", remoteTcpClient_thread,
+                                       STACK_SIZE_REMOTE_TCP_CLIENT_THREAD, 
+                                       (mico_thread_arg_t)app_context );
+        require_noerr_action( err, exit, 
+            wifi_station_log("ERROR: Unable to start the remote client thread.") );
+    }
+  }
+  #endif
   
 exit:
   return err;
